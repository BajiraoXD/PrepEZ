<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quiz App</title>
    <!-- <link rel="stylesheet" href="style.css"> -->
    <style>
        * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: "Poppins", sans-serif;
}

body {
    background: #000;
    background-image: url(/image/quiz_bg.jpg);
    background-size: cover;

}

.app {
    background: linear-gradient(to bottom, #55b3d5 60%, #372fc7 100%);
    width: 90%;
    max-width: 600px;
    margin: 100px auto 0;
    border-radius: 10px;
    padding: 30px;
}

.app h1 {
    font-size: 25px;
    color: #001e4d;
    font-weight: 600;
    border-bottom: 1px solid #333;
    padding-bottom: 20px;
    text-align: center;
}

.quiz {
    padding: 20px 0;
}

.quiz h2 {
    font-size: 18px;
    color: #001e4d;
    font-weight: 600;
}

.btn {
    background: #fff;
    color: #222;
    font-weight: 500;
    width: 100%;
    border: 1px solid #222;
    padding: 10px;
    margin: 10px 0;
    text-align: left;
    border-radius: 4px;
    cursor: pointer;
}

.btn:hover:not([disabled]) {
    background: #222;
    color: #fff;
}

.btn:disabled {
    cursor: no-drop;
}

.button-container {
    display: flex;
    justify-content: center;
    margin: 20px auto 0;
}

#prev-btn {
    background: #001e4d;
    color: #fff;
    font-weight: 500;
    border: 0;
    padding: 10px;
    margin: 0 10px;
    border-radius: 4px;
    cursor: pointer;
    display: none;
}

#next-btn {
    background: #001e4d;
    color: #fff;
    font-weight: 500;
    border: 0;
    padding: 10px;
    margin: 0 10px;
    border-radius: 4px;
    cursor: pointer;
    display: none;
}

.correct {
    background: #9aeabc;
}

.incorrect {
    background: #ff9393;
}

.app .quiz .selected {
    background-color: #ccc;
}

.app .quiz .selected.correct {
    background-color: #9aeabc;
}

.app .quiz .selected.incorrect {
    background-color: #ff9393;
}
    </style>
    <!-- <script src="script.js" defer></script> -->
</head>

<body>
    <div class="app">
        <h1>Quiz</h1>
        <div class="quiz">
            <h2 id="question">Question Goes Here</h2>
            <div id="answer-buttons">
                <button class="btn">Answer1</button>
                <button class="btn">Answer2</button>
                <button class="btn">Answer3</button>
                <button class="btn">Answer4</button>
            </div>
            <div class="button-container">
                <button id="prev-btn">Previous</button>
                <button id="next-btn">Next</button>
            </div>
        </div>
    </div>
    <script>
        const questions = [
    {
        question: "Which of the following is a primary key in a relational database?",
        answers: [
            { text: "A unique identifier for each record", correct: true },
            { text: "A column that can have NULL values", correct: false },
            { text: "A column that stores duplicate values", correct: false },
            { text: "A column used to join two tables", correct: false },
        ]
    },
    {
        question: "Which of the following keywords is used to define a variable in Javascript?",
        answers: [
            { text: "var", correct: false },
            { text: "let", correct: false },
            { text: "Both A and B", correct: true },
            { text: "None of the above", correct: false },
        ]
    },
    {
        question: "What is the result of '5' + 3 in JavaScript?",
        answers: [
            { text: "8", correct: false },
            { text: "53", correct: true },
            { text: "15", correct: false },
            { text: "NaN", correct: false },
        ]
    },
    {
        question: "Inside which HTML element do we put the JavaScript?",
        answers: [
            { text: "&lt;script&gt;", correct: true },
            { text: "&lt;scripting&gt;", correct: false },
            { text: "&lt;javascript&gt;", correct: false },
            { text: "&lt;js&gt;", correct: false },
        ]
    },
    {
        question: "Which function is used to print a message to the console in JavaScript?",
        answers: [
            { text: "print()", correct: false },
            { text: "console.log()", correct: true },
            { text: "alert()", correct: false },
            { text: "log()", correct: false },
        ]
    },
    {
        question: "In C++, which of the following is used to define a function",
        answers: [
            { text: "var functionName()", correct: false },
            { text: "functionName{}", correct: false },
            { text: "void functionName()", correct: true },
            { text: "def functionName()", correct: false },
        ]
    },
    {
        question: "What does SQL stand for?",
        answers: [
            { text: "Simple Query Language", correct: false },
            { text: "Structured Query Language", correct: true },
            { text: "System Query Language", correct: false },
            { text: "Sequential Query Language", correct: false },
        ]
    },
    {
        question: "Which data structure uses the Last In First Out (LIFO) principle?",
        answers: [
            { text: "Queue", correct: false },
            { text: "Stack", correct: true },
            { text: "Array", correct: false },
            { text: "Linked List", correct: false },
        ]
    },
    {
        question: "What is the role of an IP address in networking?",
        answers: [
            { text: "To identify the physical location of a device", correct: false },
            { text: "To encrypt data for secure transmission", correct: false },
            { text: "To uniquely identify a device on a network", correct: true },
            { text: "To manage the flow of data between devices", correct: false },
        ]
    },
    {
        question: "Which of the following is NOT a type of operating system?",
        answers: [
            { text: "Real-time OS", correct: false },
            { text: "Batch OS", correct: false },
            { text: "Network OS", correct: false },
            { text: "SQL OS", correct: true },
        ]
    }
];

const questionElement = document.getElementById("question");
const answerButtons = document.getElementById("answer-buttons");
const nextButton = document.getElementById("next-btn");
const prevButton = document.getElementById("prev-btn");

let currentQuestionIndex = 0;
let score = 0;
let answers = [];

function startQuiz() {
    currentQuestionIndex = 0;
    score = 0;
    answers = [];
    nextButton.innerHTML = "Next";
    showQuestion();
}

function showQuestion() {
    resetState();
    let currentQuestion = questions[currentQuestionIndex];
    let questionNo = currentQuestionIndex + 1;
    questionElement.innerHTML = questionNo + ". " + currentQuestion.question;
    currentQuestion.answers.forEach(answer => {
        const button = document.createElement("button");
        button.innerHTML = answer.text;
        button.classList.add("btn");
        answerButtons.appendChild(button);
        if (answer.correct) {
            button.dataset.correct = answer.correct;
        }
        button.addEventListener("click", selectAnswer);
    })
    if (currentQuestionIndex > 0) {
        prevButton.style.display = "block";
    } else {
        prevButton.style.display = "none";
    }
    if (userAnswers[currentQuestionIndex - 1]) { 
        const previousAnswer = userAnswers[currentQuestionIndex - 1];
        const buttons = answerButtons.children;
        for (let i = 0; i < buttons.length; i++) {
            if (buttons[i].innerHTML === previousAnswer.text) {
                buttons[i].classList.add("selected"); 
                if (previousAnswer.correct) {
                    buttons[i].classList.add("correct"); 
                } else {
                    buttons[i].classList.add("incorrect"); 
                }
            }
        }
    }
}

function resetState() {
    nextButton.style.display = "none";
    prevButton.style.display = "none";
    while (answerButtons.firstChild) {
        answerButtons.removeChild(answerButtons.firstChild);
    }
}

function selectAnswer(e) {
    const selectedBtn = e.target;
    const isCorrect = selectedBtn.dataset.correct === "true";
    if (isCorrect) {
        selectedBtn.classList.add("correct");
        score++;
    } else {
        selectedBtn.classList.add("incorrect");
    }

    Array.from(answerButtons.children).forEach(button => {
        if (button.dataset.correct === "true") {
            button.classList.add("correct");
        }
        button.disabled = true;
    })
    nextButton.style.display = "block";
    prevButton.style.display = "block";
}


function showScore() {
    resetState();
    questionElement.innerHTML = `You scored ${score} out of ${questions.length}!`;
    nextButton.innerHTML = "Do Again!";
    nextButton.style.display = "block";
    prevButton.style.display = "none";
}

function handleNextButton() {
    currentQuestionIndex++;
    if (currentQuestionIndex < questions.length) {
        showQuestion();
    } else {
        showScore();
    }
}

function handlePrevButton() {
    currentQuestionIndex--;
    if (currentQuestionIndex >= 0) {
        showQuestion();
    }
}

nextButton.addEventListener("click", () => {
    if (currentQuestionIndex < questions.length) {
        handleNextButton();
    } else {
        startQuiz();
    }
})

prevButton.addEventListener("click", handlePrevButton); 

startQuiz();
    </script>
</body>


</html>